{"version":3,"sources":["gantt/gantt.js","App.js","serviceWorker.js","index.js"],"names":["Gantt","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","times","indexes","i","push","event","y","scrollLeft","target","scrollTop","document","getElementsByClassName","ganttBlockStyle","width","length","react_default","a","createElement","className","map","value","index","key","props","indexs","onScroll","style","blocks","React","Component","Side","children","Block","alt","Task","taskStyle","left","top","title","App","data","aircraft","acReg","acType","maxSeat","flights","flightNo","depa","arri","airri","locked","connections","gantt_Gantt","v","gantt_Side","fontSize","gantt_Block","gantt_Task","f","j","fsClass","icon","position","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3caf63a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './gantt.css';\r\nclass Gantt extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            times: [],\r\n            indexes: []\r\n        }\r\n        for (let i = 0; i < 24; i++) {\r\n            this.state.times.push(i);\r\n        }\r\n        for (let i = 0; i < 24; i++) {\r\n            this.state.times.push(i);\r\n        }\r\n        for (let i = 0; i < 100; i++) {\r\n            this.state.indexes.push(i);\r\n        }\r\n    }\r\n    onScroll(event,y){\r\n        var scrollLeft = event.target.scrollLeft;\r\n        var scrollTop = event.target.scrollTop;\r\n        document.getElementsByClassName('gantt-header')[0].scrollLeft = scrollLeft\r\n        document.getElementsByClassName('gantt-content-locked')[0].scrollTop = scrollTop\r\n    }\r\n    render() {\r\n        var width = this.state.times.length * 60\r\n        var ganttBlockStyle = {\r\n            width:width\r\n        }\r\n        return (\r\n            <div className=\"gantt\">\r\n                <div className=\"gantt-header-wrapper\">\r\n                    <div className=\"gantt-header-locked\">\r\n                    </div>\r\n                    <div className=\"gantt-header\">\r\n                        {\r\n                            this.state.times.map((value, index) => {\r\n                                return (\r\n                                    <div key={index} className=\"gantt-header-cell\">{value +\":00\"}</div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"gantt-content-wrapper\">\r\n                    <div className=\"gantt-content-locked\">\r\n                            {this.props.indexs}\r\n                    </div>\r\n                    <div className=\"gantt-content\" onScroll={this.onScroll}>\r\n                        <div style={ganttBlockStyle}>\r\n                            {this.props.blocks}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Side extends React.Component {\r\n    render() {\r\n        let className = \"side \" + (this.props.className||\"\");\r\n        return (\r\n            <div className={className}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Block extends React.Component {\r\n    render() {\r\n        var className =\"gantt-block \";\r\n        className += this.props.alt?\" gantt-block-alt\":\"\";\r\n        return (\r\n            <div className={className}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass Task extends React.Component {\r\n    render() {\r\n        const taskStyle = {\r\n            left: (this.props.left||0) + 'px',\r\n            width:(this.props.width||40) + 'px',\r\n            top:this.props.top\r\n        }\r\n        return (\r\n            <div className={this.props.className + \" task \"} style={taskStyle} title={this.props.title}>\r\n                    {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport {Gantt,Side,Block,Task};","import React from 'react';\nimport './App.css';\nimport { Gantt, Side, Block, Task } from './gantt/gantt'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {}\n    this.state.data = []\n    for (let i = 0; i < 100; i++) {\n      this.state.data.push({\n        aircraft: {\n          acReg: 'B-1818',\n          acType: 'B737-800',\n          maxSeat: 170\n        },\n        flights: [\n          {\n            flightNo: 'GT7300',\n            depa: 'ZGGG',\n            arri: 'ZUCK',\n            left: 200,\n            width: 200\n          }, {\n            flightNo: 'GT7300',\n            depa: 'ZUCK',\n            airri: 'ZULS',\n            left: 450,\n            width: 150,\n            locked: true\n          }\n          , {\n            flightNo: 'GT8300',\n            depa: 'ZULS',\n            airri: 'ZBAA',\n            left: 850,\n            width: 150\n          }\n        ],\n        connections: [\n\n        ]\n      })\n    }\n\n  }\n\n\n  render() {\n    return (\n      <Gantt\n        indexs={\n          <div>\n            {\n              this.state.data.map((v, i) => {\n                return (\n                  <Side key={i}>\n                    <div className=\"ac-info\">\n                      <div className=\"ac-reg\">\n                        <i className=\"iconfont icon-plane\"></i>\n                        &nbsp;{v.aircraft.acReg}\n                      </div>\n                      <div className=\"ac-detail\">\n                        <div className=\"ac-type\">\n                          <i className=\"iconfont icon-kind\" style={{ fontSize: \"11px\" }}></i>\n                          &nbsp;{v.aircraft.acType}\n                        </div>\n                        <div className=\"ac-seat\">\n                          <i className=\"iconfont icon-seat\" style={{ fontSize: \"11px\" }}></i>\n                          &nbsp;{v.aircraft.maxSeat}\n                        </div>\n                      </div>\n                    </div>\n                  </Side>\n                )\n              })\n            }\n          </div>\n        }\n        blocks={\n          <div>\n            {\n              \n\n              this.state.data.map((v, i) => {\n                return (\n                  <Block key={i} alt={i % 2}>\n                    <Task left=\"150\" width=\"50\" className=\"airport\">\n                      ZGGG\n                    </Task>\n                    <Task left=\"150\" width=\"70\" className=\"airport-status\">\n                    </Task>\n                    {\n                      v.flights.map((f, j) => {\n                        var fsClass = j > 0 ? \"flight-status flight-status-sch\" : \"flight-status flight-status-flying\"\n                        var icon = f.locked?(<div style={{position:'absolute',width:'40px'}}><i className=\"iconfont icon-lock\"></i></div>):\"\";\n                        return (\n                          <div key={j}>\n                            <Task left={f.left} width={f.width} className=\"flight\">\n                              { icon }\n                              <div>{f.flightNo}</div>\n                            </Task>\n                            <Task left={f.left + (j < 1 ? 20 : 0)} width={f.width} className={fsClass}>\n                            </Task>\n                          </div>\n                        )\n                      })\n                    }\n\n                    <Task left=\"400\" width=\"50\" className=\"airport\">\n                      ZUCK\n                    </Task>\n                    <Task left=\"420\" width=\"30\" className=\"airport-status airport-less-time\">\n                    </Task>\n\n                    <Task left=\"600\" width=\"250\" className=\"airport\">\n                      ZULS\n                    </Task>\n                    <Task left=\"600\" width=\"250\" className=\"airport-status\">\n                    </Task>\n\n\n                    <Task left=\"1600\" width=\"150\" className=\"maint\">\n                      <i className=\"iconfont icon-weixiu\"></i>&nbsp;\n                      机务维修工作\n                    </Task>\n                    <Task left=\"1400\" width=\"120\" className=\"overnight\">\n                      <i className=\"iconfont  icon-weizhi\" style={{ fontSize: \"13px\" }}></i>\n                      <span title=\"限制过夜\">ZBAA</span>\n                    </Task>\n                  </Block>\n                )\n              })\n            }\n          </div>\n        }\n      />\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}